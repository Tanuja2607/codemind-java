class Animal
{
    public void eat()
    {
        System.out.println("Animal eat food");
    }
    public void sound()
    {
        System.out.println("Animal make sound");
    }
    public void guard()
    {
        System.out.println("Animal will protect home");
    }
}
class Dog extends Animal{
    @Override
    public void sound()
    {
      System.out.println("Boww...Bow");
    }
    @Override
    public void guard()
    {
        System.out.println("Dog will protect our home");
    }
}
class Tiger extends Animal
{
    @Override
    public void sound()
    {
        System.out.println("Tiger is roaring");
    }
}
public class DynamicmethodDispatchDemo {
    public static void main(String args[])
    {
        Animal a=new Animal();
        a.eat();
        a.sound();

        a=new Dog();
        a.eat();
        a.sound();
        a.guard();

        a=new Tiger();
        a.eat();
        a.sound();

         
    }
    
}
